<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>All-in-One Problem Solver</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 2rem;
      background-color: #f0f4f8;
      color: #333;
    }
    h2 {
      border-bottom: 2px solid #007acc;
      padding-bottom: 5px;
    }
    section {
      background: white;
      border-radius: 10px;
      padding: 20px;
      margin-bottom: 30px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    label, input, textarea {
      display: block;
      width: 100%;
      margin-top: 10px;
      font-size: 1rem;
    }
    button {
      margin-top: 10px;
      padding: 8px 15px;
      background: #007acc;
      color: white;
      border: none;
      cursor: pointer;
      border-radius: 5px;
    }
    button:hover {
      background: #005f99;
    }
    pre {
      background: #eef;
      padding: 10px;
      border-radius: 5px;
      white-space: pre-wrap;
    }
  </style>
</head>
<body>

  <!-- Caesar Cipher -->
  <section>
    <h2>Caesar Cipher</h2>
    <label>Message: <input type="text" id="cipherMsg" /></label>
    <label>Shift: <input type="number" id="cipherShift" /></label>
    <button onclick="encode()">Encode</button>
    <button onclick="decode()">Decode</button>
    <pre id="cipherResult"></pre>
  </section>

  <!-- Indian Currency Formatter -->
  <section>
    <h2>Indian Currency Formatter</h2>
    <label>Number: <input type="text" id="currencyInput" /></label>
    <button onclick="formatCurrency()">Format</button>
    <pre id="currencyResult"></pre>
  </section>

  <!-- Combine Lists -->
  <section>
    <h2>Combine Two Lists</h2>
    <label>List A (JSON): <textarea id="listA" rows="4">[{"positions":[0,4],"values":[1,2]}]</textarea></label>
    <label>List B (JSON): <textarea id="listB" rows="4">[{"positions":[2,6],"values":[3,4]}]</textarea></label>
    <button onclick="combineLists()">Combine</button>
    <pre id="listResult"></pre>
  </section>

  <!-- Minimize Loss -->
  <section>
    <h2>Minimize Loss</h2>
    <label>Prices (comma separated): <input type="text" id="priceList" value="20,15,7,2,13"/></label>
    <button onclick="minimizeLoss()">Find Min Loss</button>
    <pre id="lossResult"></pre>
  </section>

  <script>
    // Caesar Cipher
    function encode() {
      const msg = document.getElementById("cipherMsg").value.toUpperCase();
      const shift = parseInt(document.getElementById("cipherShift").value);
      let result = "";
      for (let char of msg) {
        if (char >= 'A' && char <= 'Z') {
          let newChar = String.fromCharCode(((char.charCodeAt(0) - 65 + shift) % 26) + 65);
          result += newChar;
        } else {
          result += char;
        }
      }
      document.getElementById("cipherResult").textContent = "Encoded: " + result;
    }

    function decode() {
      const msg = document.getElementById("cipherMsg").value.toUpperCase();
      const shift = parseInt(document.getElementById("cipherShift").value);
      let result = "";
      for (let char of msg) {
        if (char >= 'A' && char <= 'Z') {
          let newChar = String.fromCharCode(((char.charCodeAt(0) - 65 - shift + 26) % 26) + 65);
          result += newChar;
        } else {
          result += char;
        }
      }
      document.getElementById("cipherResult").textContent = "Decoded: " + result;
    }

    // Indian Currency Formatter
    function formatCurrency() {
      let num = document.getElementById("currencyInput").value;
      let [intPart, decPart] = num.split(".");
      let lastThree = intPart.slice(-3);
      let otherNumbers = intPart.slice(0, -3).replace(/\B(?=(\d{2})+(?!\d))/g, ",");
      let formatted = otherNumbers ? otherNumbers + "," + lastThree : lastThree;
      if (decPart) formatted += "." + decPart;
      document.getElementById("currencyResult").textContent = "Formatted: " + formatted;
    }

    // Combine Lists
    function combineLists() {
      let A = JSON.parse(document.getElementById("listA").value);
      let B = JSON.parse(document.getElementById("listB").value);
      let result = [...A];

      for (let b of B) {
        let added = false;
        for (let a of result) {
          let overlap = Math.min(a.positions[1], b.positions[1]) - Math.max(a.positions[0], b.positions[0]);
          let bLength = b.positions[1] - b.positions[0];
          if (overlap > bLength / 2) {
            a.values = a.values.concat(b.values);
            added = true;
            break;
          }
        }
        if (!added) result.push(b);
      }

      result.sort((x, y) => x.positions[0] - y.positions[0]);
      document.getElementById("listResult").textContent = JSON.stringify(result, null, 2);
    }

    // Minimize Loss
    function minimizeLoss() {
      let prices = document.getElementById("priceList").value.split(",").map(Number);
      let minLoss = Infinity, buyYear = -1, sellYear = -1;

      for (let i = 0; i < prices.length; i++) {
        for (let j = i + 1; j < prices.length; j++) {
          let loss = prices[i] - prices[j];
          if (loss > 0 && loss < minLoss) {
            minLoss = loss;
            buyYear = i + 1;
            sellYear = j + 1;
          }
        }
      }

      let result = minLoss === Infinity ? "No loss possible" : 
        `Buy Year: ${buyYear}, Sell Year: ${sellYear}, Loss: ${minLoss}`;
      document.getElementById("lossResult").textContent = result;
    }
  </script>
</body>
</html>
